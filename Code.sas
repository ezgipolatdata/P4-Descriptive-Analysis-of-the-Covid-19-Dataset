
/* Importing df.covid  */

%web_drop_table(WORK.IMPORT);


FILENAME REFFILE '/home/u60688986/F/df_covid.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.IMPORT;
	GETNAMES=YES;
RUN;

PROC CONTENTS DATA=WORK.IMPORT; RUN;


%web_open_table(WORK.IMPORT);


/* Importing the original dataset */

%web_drop_table(WORK.IMPORT1);


FILENAME REFFILE '/home/u60688986/F/imputed_data.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.IMPORT1;
	GETNAMES=YES;
RUN;

PROC CONTENTS DATA=WORK.IMPORT1; RUN;


%web_open_table(WORK.IMPORT1);


proc export 
  data=WORK.IMPORT1
  dbms=xlsx 
  outfile="/home/u60688986/F/imputed_excel.xlsx" 
  replace;
run;



/* 1-Run missing data check  */
/* 2-Frequency */
/* 3-Central Tendency */
/* 4-Dispersion */


/* Accuracy Check */
proc univariate data=work.import1;
run;



/* !!!!!!!!!!!!!!YEAR AND MONTH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */

data new;
set import1;
year = year(date);
format yymm yymms7.;
month = month(date);
yymm= mdy(month,1,year);
run;

/* For Yearly & Monthly Plots */
data new_yearmonth;
set new;
IF month = 1 and year = 2021 then month = 13;
IF month = 2 and year = 2021 then month = 14;
IF month = 3 and year = 2021 then month = 15;
IF month = 4 and year = 2021 then month = 16;
IF month = 5 and year = 2021 then month = 17;
IF month = 6 and year = 2021 then month = 18;
run;



/* TEST3 !WORKED! STATE NUMBERS */

proc sql;
    select state_name, sum( covid_19_confirmed_cases) as cases
    from import1 
    group by state_name;
quit;

proc sql;
	create table State_Numbers as
    select state_name, sum( covid_19_confirmed_cases) as cases, sum(covid_19_deaths) as deaths
    from import1 
    group by state_name;
quit;




proc sql;
	create table State_Numbers_2 as
    select date, state_name, sum( covid_19_confirmed_cases) as cases, sum(covid_19_deaths) as deaths
    from import1 
    group by date, state_name;
quit;



proc export data=State_Numbers_2
    outfile="/home/u60688986/F/State_Numbers_2.csv"
    dbms=csv;
run;


proc sql;
	create table State_Numbers_3 as
    select date, county_name, state_name, sum( covid_19_confirmed_cases) as cases, sum(covid_19_deaths) as deaths
    from import1 
    group by date, county_name, state_name;
quit; 

proc export data=State_Numbers_3
    outfile="/home/u60688986/F/State_Numbers_3.csv"
    dbms=csv;
run;



/* EXPORT STATE NUMBER DATASET */
proc export data=State_Numbers
    outfile="/home/u60688986/F/State_Numbers.csv"
    dbms=csv;
run;

/* USA NUMBERS  */

proc sql;
	create table USA_Numbers as
    select  date, sum( covid_19_confirmed_cases) as cases, sum(covid_19_deaths) as deaths
    from import1 
    group by date;
quit;


data USA_Numbers_montly;
set USA_Numbers;
year = year(date);
format yymm yymms7.;
month = month(date);
yymm= mdy(month,1,year);
run;


proc sql;
	create table USA_Numbers_Monthly_For as
    select  yymm, sum( cases) as cases1, sum( deaths) as deaths1
    from USA_Numbers_montly
    group by yymm;
quit; 

proc sql;
    create table USA_Numbers_montly_test as
    select yymm, sum(  cases) as casess, sum( deaths) as deathss
    from USA_Numbers_montly     
    group by yymm;
    
quit;




/* EXPORT */
proc export data=USA_Numbers
    outfile="/home/u60688986/F/State_Numbers.csv"
    dbms=csv;
run;








/* Sorting */
/* Lowest 10 Cases */

proc sort data=State_Numbers
	out=State_Numbers_Sorted_Cases;
    by cases;
run;


proc sql outobs=10;
	create table work.first_5_LowestCase as
	select * from State_Numbers_Sorted_Cases;
quit;

/* Lowest 10 Cases Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '18/03/2022 21:56' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-23985-bmtvbjiVNyynvg97abJK-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.FIRST_5_LOWESTCASE;
	vbar state_name / response=cases group=cases groupdisplay=cluster;
	yaxis grid;
	xaxis discreteorder = data;
run;

ods graphics / reset;



/* Highest 10 Cases */

proc sort data=State_Numbers
	out=State_Numbers_Sorted_Cases2;
    by descending cases;
run;

proc sql outobs=10;
	create table work.first_10_HighestCase as
	select * from State_Numbers_Sorted_Cases2;
quit;


/* Highest 10 Cases Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '18/03/2022 22:21' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-23985-bmtvbjiVNyynvg97abJK-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.FIRST_10_HIGHESTCASE;
	vbar state_name / response=cases group=cases groupdisplay=cluster;
	yaxis grid;
	xaxis discreteorder = data;
run;

ods graphics / reset;


/* Lowest 10 Deaths */

proc sort data=State_Numbers
	out=State_Numbers_Sorted_Deaths;
    by deaths;
run;


proc sql outobs=10;
	create table work.first_10_LowestDeaths as
	select * from State_Numbers_Sorted_Deaths;
quit;


/* Lowest 10 Deaths Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '18/03/2022 22:27' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-23985-bmtvbjiVNyynvg97abJK-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.FIRST_10_LOWESTDEATHS;
	vbar state_name / response=deaths group=deaths groupdisplay=cluster;
	yaxis grid;
	xaxis discreteorder = data;
run;

ods graphics / reset;


/* Highest 10 Deaths */

proc sort data=State_Numbers
	out=State_Numbers_Sorted_Deaths2;
    by descending deaths;
run;

proc sql outobs=10;
	create table work.first_10_HighestDeaths as
	select * from State_Numbers_Sorted_Deaths2;
quit;

/* Highest 10 Deaths Bar Chart*/
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '18/03/2022 22:29' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-23985-bmtvbjiVNyynvg97abJK-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.FIRST_10_HIGHESTDEATHS;
	vbar state_name / response=deaths group=deaths groupdisplay=cluster;
	yaxis grid;
	xaxis discreteorder = data;
run;

ods graphics / reset;











/* Overall Numbers  */
proc sql;
	create table Overall_Numbers as
    select sum( covid_19_confirmed_cases) as usa_cases, sum(covid_19_deaths) as usa_deaths
    from import1;
    
quit;




/*  */
/* Case Fatality Rate */

DATA CFR_Covid;
    SET State_Numbers;
    case_fatality_rate = (deaths / cases ) * 100;
    
RUN;

/* Rounding */
data Case_Fatality_Rate;
	set CFR_Covid;
 
	
	case_fatality = round(case_fatality_rate, 0.01);
	
run;


/* Sort */

proc sort data=Case_Fatality_Rate
	out=Case_Fatality_Sorted;
    by descending case_fatality;
run;

proc sql outobs=15;
	create table Case_Fatality_Highest15 as
	select * from Case_Fatality_Sorted;
quit;

proc export data=Case_Fatality_Highest15
    outfile="/home/u60688986/F/Case_Fatality_Highest15.csv"
    dbms=csv;
run;


/* Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '18/03/2022 23:45' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-23985-bmtvbjiVNyynvg97abJK-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.CASE_FATALITY_HIGHEST15;
	hbar state_name / response=case_fatality group=case_fatality 
		groupdisplay=cluster;
	xaxis grid;
	yaxis discreteorder = data;
run;

ods graphics / reset;


/* Sort */

proc sort data=Case_Fatality_Rate
	out=Case_Fatality_Sorted2;
    by case_fatality;
run;

proc sql outobs=15;
	create table Case_Fatality_Lowest15 as
	select * from Case_Fatality_Sorted2;
quit;

/* Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '18/03/2022 23:49' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-23985-bmtvbjiVNyynvg97abJK-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.CASE_FATALITY_LOWEST15;
	hbar state_name / response=case_fatality group=case_fatality 
		groupdisplay=cluster;
	xaxis grid;
	yaxis discreteorder = data;
run;

ods graphics / reset;





/* Population Density Dataset */

proc sql;
    create table Population_Density_Data as
    select state_name, avg( population_density) as pop_den
    from import1     
    group by state_name;
    
quit;

 


/* Export */
proc export data=Population_Density_Data
    outfile="/home/u60688986/F/Pop_Den.csv"
    dbms=csv;
run;




data test4;

set IMPORT3;

Size=input(Miles, best8.);

run;


DATA Population_Calculation;
    SET test4;
    population =  pop_den *  Size;
     
RUN;

/* Generated Code (IMPORT) */
/* Source File: Miles and Pop Den3.csv */
/* Source Path: /home/u60688986/F */
/* Code generated on: 19/03/2022 00:56 */

%web_drop_table(WORK.IMPORT5);


FILENAME REFFILE '/home/u60688986/F/Miles and Pop Den3.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.IMPORT5;
	GETNAMES=YES;
RUN;

PROC CONTENTS DATA=WORK.IMPORT5; RUN;


%web_open_table(WORK.IMPORT5);




/* MORTALITY RATE CALCULATION */

DATA MortalityRate_Calculation;
    SET IMPORT5;
    mortality_rate =  (deaths  /  population) * 100000 ;
     
RUN;

/* Rounding */
data Mortality_Rate2;
	set MortalityRate_Calculation;
 
	MortalityRate = round(mortality_rate, 0.01);
	
run;

/* Sort Ascending*/
proc sort data=Mortality_Rate2
	out=Mor_Rate_Sorted2;
    by MortalityRate;
run;

proc sql outobs=15;
	create table MorRate_Lowest15 as
	select * from Mor_Rate_Sorted2;
quit;

/* Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '19/03/2022 10:56' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-31737-kFNrao93SUtu4XsprKHj-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.MORRATE_LOWEST15;
	hbar state_name / response=MortalityRate group=MortalityRate 
		groupdisplay=cluster;
	yaxis label="States";
	xaxis grid label="Mortality Rate";
	yaxis discreteorder = data;
run;

ods graphics / reset;

/* Sort Descending*/
proc sort data=Mortality_Rate2
	out=Mor_Rate_Sorted3;
    by descending MortalityRate;
run;

proc sql outobs=15;
	create table MorRate_Highest15 as
	select * from Mor_Rate_Sorted3;
quit;

/* Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '19/03/2022 11:00' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS04-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-31737-kFNrao93SUtu4XsprKHj-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.MORRATE_HIGHEST15;
	hbar state_name / response=MortalityRate group=MortalityRate 
		groupdisplay=cluster;
	yaxis label="States";
	xaxis grid label="Mortality Rate";
	yaxis discreteorder = data;
run;

ods graphics / reset;


/* Mortality Rate Dataset Export */
proc export data=Mortality_Rate2
    outfile="/home/u60688986/F/Mortality_Rates_Sorted.csv"
    dbms=csv;
run;

/* Hi Monica! I just realized that the population data was already in the dataset. Now I will do all my */
/* operations again from scratch and go cry :). Don't mind the double morality calculations if you see this */

/* Getting The Population Data */

proc sql;
    create table Population_Data as
    select  county_name, state_name, avg(total_population) as population, sum(covid_19_deaths) as deaths
    from import1     
    group by state_name, county_name ;
    
quit; 


proc sql;
    create table State_Population_Data as
    select  state_name, sum(population) as state_population, sum(deaths) as state_deaths
    from Population_Data     
    group by state_name ;
    
quit;

/* MORTALITY RATE CALCULATION */

DATA MortalityRate_CalculationV2;
    SET State_Population_Data;
    mortality_rate =  (state_deaths  /  state_population) * 100000 ;
     
RUN;

/* EXPORT */

proc export data=MortalityRate_CalculationV2
    outfile="/home/u60688986/F/Mortality_Dataset.csv"
    dbms=csv;
run;

/* Rounding */
data Mortality_RateV2_Rounded;
	set MortalityRate_CalculationV2;
 
	MortalityRate = round(mortality_rate, 0.01);
	
run;

/* Sort Ascending*/
proc sort data=Mortality_RateV2_Rounded
	out=Mor_Ratev2_Sorted;
    by MortalityRate;
run;

proc sql outobs=15;
	create table MorRatev2_Lowest15 as
	select * from Mor_Ratev2_Sorted;
quit;



/* Bar Chart */
/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '19/03/2022 18:49' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS01-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-42245-sYJ2tGbVwAbFeGEjUU9d-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.MORRATEV2_LOWEST15;
	hbar state_name / response=MortalityRate group=MortalityRate 
		groupdisplay=cluster;
	yaxis label="States";
	xaxis grid label="Mortality Rate";
	yaxis discreteorder = data;
run;

ods graphics / reset;


/* Sort Ascending*/
proc sort data=Mortality_RateV2_Rounded
	out=Mor_Ratev2_Sorted;
    by descending MortalityRate;
run;

proc sql outobs=15;
	create table MorRatev2_Highest15 as
	select * from Mor_Ratev2_Sorted;
quit;



/*
 *
 * Task code generated by SAS Studio 3.8 
 *
 * Generated on '19/03/2022 18:53' 
 * Generated by 'u60688986' 
 * Generated on server 'ODAWS01-USW2.ODA.SAS.COM' 
 * Generated on SAS platform 'Linux LIN X64 3.10.0-1062.9.1.el7.x86_64' 
 * Generated on SAS version '9.04.01M6P11072018' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36' 
 * Generated on web client 'https://odamid-usw2.oda.sas.com/SASStudio/main?locale=en_GB&zone=GMT-07%253A00&ticket=ST-42245-sYJ2tGbVwAbFeGEjUU9d-cas' 
 *
 */

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.MORRATEV2_HIGHEST15;
	hbar state_name / response=MortalityRate group=MortalityRate 
		groupdisplay=cluster;
	yaxis label="States";
	xaxis grid label="Mortality Rate";
	yaxis discreteorder = data;
run;

ods graphics / reset;








/*  */
/* Vaccination */

proc sql;
	create table Vaccination as
    select  state_name, county_name, max(percent_of_vaccinated_residents) as vccination
    from import1 
    group by state_name, county_name;
quit;


proc export data=Vaccination
    outfile="/home/u60688986/F/Vac_Numbers.csv"
    dbms=csv;
run;



proc sql;
	create table Vaccination3 as
    select  state_name, sum(vccination) as vaccination
    from Vaccination 
    group by state_name;
quit;

proc export data=Vaccination3
    outfile="/home/u60688986/F/Vac_Numbers3.csv"
    dbms=csv;
run;



